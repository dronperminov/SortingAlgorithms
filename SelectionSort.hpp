#pragma once

// Сортировка выбором
// Временная сложность: O(n^2)
// Пространственная сложность: O(1)

// сортировка выбором минимума
void SelectionSortMin(int *array, int n) {
	// ищем минимумы в массива n-1 раз
	for (int i = 0; i < n - 1; i++) {
		int jmin = i; // считаем, что текущий элемент минимальный

		// идём по оставшейся части массива в поиска минимума
		for (int j = i + 1; j < n; j++)
			if (array[j] < array[jmin]) // если элемент стал меньше минимального
				jmin = j; // обновляем индекс минимума

		// меняем местами текущий элемент и минимальный
		int tmp = array[jmin];
		array[jmin] = array[i];
		array[i] = tmp;
	}
}

// сортировка выбором максимума
void SelectionSortMax(int *array, int n) {
	// ищем максимумы в массива n-1 раз
	for (int i = n - 1; i > 0; i--) {
		int jmax = i; // считаем, что текущий элемент максимальный

		// идём по оставшейся части массива в поиска максимума
		for (int j = i - 1; j >= 0; j--)
			if (array[jmax] < array[j]) // если элемент стал больше максимального
				jmax = j; // обновляем индекс максимума

		// меняем местами текущий элемент и максимальный
		int tmp = array[jmax];
		array[jmax] = array[i];
		array[i] = tmp;
	}
}